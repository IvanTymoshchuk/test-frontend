{"version":3,"file":"static/js/450.a3dec030.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","pages/Catalog/Catalog.styled.js","components/FilteredForm/Select.jsx","components/FilteredForm/FilteredForm.styled.js","components/FilteredForm/FilteredForm.jsx","components/AdvertsList/AdvertsList.styled.js","components/AdvertsItems/AdvertsItems.styled.js","components/AdvertsItems/AdvertsItems.jsx","components/AdvertsList/AdvertsList.jsx","pages/Catalog/Catalog.jsx","redux/adverts/selectors.js"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\n\nexport default function Buttons({ text, onClick, width }) {\n  const StylesButton = styled(Button)(() => ({\n    width: width,\n    height: '44px',\n    marginTop: '20px',\n    padding: '14px 44px',\n    borderRadius: '12px',\n    backgroundColor: 'rgba(52, 112, 255, 1)',\n    fontFamily: 'MontserratRegular',\n\n    '&:hover': {\n      backgroundColor: '  rgba(11, 68, 205, 1)',\n      transition: 'backgroundColor 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n    },\n  }));\n\n  return (\n    <StylesButton variant=\"contained\" onClick={onClick}>\n      {text}\n    </StylesButton>\n  );\n}\n","import styled from '@emotion/styled';\nimport { colors } from 'utils';\n\nexport const CatalogContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  max-width: 1184px;\n  margin: 0 auto;\n  margin-bottom: 50px;\n  min-height: 65vh;\n`;\n\nexport const ResultMessage = styled.p`\n  margin-top: 50px;\n  font-size: 24px;\n  color: ${colors.gray};\n`;\n","import React from 'react';\n\nimport Select from 'react-select';\n\nconst colourStyles = {\n  control: styles => ({\n    ...styles,\n    borderColor: 'rgba(18, 20, 23, 0.2)',\n    border: 'none',\n    borderRadius: '14px',\n    padding: '8px',\n    fontSize: '16px',\n    backgroundColor: 'rgba(247, 247, 251, 1)',\n    appearance: 'none',\n  }),\n  option: (styles, { isFocused }) => {\n    return {\n      ...styles,\n      color: isFocused ? 'black' : 'rgba(18, 20, 23, 0.2)',\n\n    };\n  },\n  menuList: base => ({\n    ...base,\n    '::-webkit-scrollbar': {\n      width: '9px',\n    },\n    '::-webkit-scrollbar-track': {\n      background: 'rgba(18, 20, 23, 0.05)',\n    },\n    '::-webkit-scrollbar-thumb': {\n      background: 'rgba(18, 20, 23, 0.05)',\n    },\n    '::-webkit-scrollbar-thumb:hover': {\n      background: 'rgba(18, 20, 23, 0.05)',\n    },\n  }),\n  placeholder: styles => ({\n    ...styles,\n    color: 'rgba(18, 20, 23, 1)',\n  }),\n};\n\nexport const Selecters = ({ options, onChange, placeholder, style }) => (\n  <Select\n    styles={colourStyles}\n    options={options}\n    onChange={onChange}\n    placeholder={placeholder}\n  />\n);\nexport default Selecters;\n","import styled from '@emotion/styled';\nimport { mq, colors } from '../../utils';\n\nexport const Container = styled.div`\n  flex-direction: column;\n  display: flex;\n  align-items: center;\n  margin-top: 50px;\n  gap: 8px;\n  ${mq.desktop} {\n    flex-direction: row;\n  }\n`;\n\nexport const SelectContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const Label = styled.label`\n  font-size: 14px;\n  color: ${colors.gray};\n  padding-left: 5px;\n`;\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  position: relative;\n`;\n\nexport const InputLeft = styled.input`\n  display: block;\n  width: 160px;\n  height: 48px;\n  border: none;\n  border-right: 1px solid rgba(138, 138, 137, 0.2);\n  background-color: ${colors.backgroundInput};\n  border-radius: 14px 0 0 14px;\n  padding-left: 0;\n  text-indent: 70px;\n  color: ${colors.black};\n  font-size: 18px;\n`;\n\nexport const UnitLeft = styled.span`\n  position: absolute;\n  display: block;\n  left: 20px;\n  top: 10px;\n  z-index: 9;\n  color: ${colors.black};\n  font-size: 18px;\n`;\n\nexport const InputRight = styled.input`\n  display: block;\n  width: 160px;\n  height: 48px;\n  border: none;\n  background-color: ${colors.backgroundInput};\n  border-radius: 0 14px 14px 0;\n  padding-left: 0;\n  text-indent: 45px;\n\n  color: ${colors.black};\n  font-size: 18px;\n`;\n\nexport const UnitRight = styled.span`\n  position: absolute;\n  display: block;\n  left: 180px;\n  top: 10px;\n  z-index: 9;\n  color: ${colors.black};\n  font-size: 18px;\n`;\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Selecters } from './Select';\nimport Buttons from 'components/Button/Button';\nimport {\n  Container,\n  SelectContainer,\n  Label,\n  Form,\n  InputContainer,\n  InputLeft,\n  UnitLeft,\n  InputRight,\n  UnitRight,\n} from './FilteredForm.styled';\n\nexport const FilteredForm = ({\n  makes,\n  prices,\n  onFilterChange,\n  onResetClick,\n}) => {\n  const [selectedMake, setSelectedMake] = useState('');\n  const [selectedPriceStep, setSelectedPriceStep] = useState(null);\n  const [selectedPriceLabel, setSelectedPriceLabel] = useState('');\n  const [minValue, setMinValue] = useState('');\n  const [maxValue, setMaxValue] = useState('');\n\n  const makeOptions = makes.map(make => ({ value: make, label: make }));\n\n  const priceRangeOptions = [];\n  for (let i = 30; i <= 500; i += 10) {\n    priceRangeOptions.push({ value: i, label: `${i}` });\n  }\n\n  const handlePriceStepChange = selectedOption => {\n    setSelectedPriceStep(selectedOption.value);\n    setSelectedPriceLabel(selectedOption.label);\n  };\n\n  const filteredPrices = prices.filter(price => price <= selectedPriceStep);\n\n  const formatMileage = value => {\n    const cleanedValue = value.toString().replace(/,/g, '');\n    const formattedValue = cleanedValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    return formattedValue;\n  };\n\n  const handleMinInputChange = e => {\n    setMinValue(e.target.value);\n  };\n\n  const handleMaxInputChange = e => {\n    setMaxValue(e.target.value);\n  };\n\n  const handleFilterClick = () => {\n    if (\n      parseInt(minValue.replace(/,/g, ''), 10) >\n      parseInt(maxValue.replace(/,/g, ''), 10)\n    ) {\n      toast.error('Minimum mileage cannot be greater than maximum mileage');\n      return;\n    }\n\n    const newFilters = {\n      make: selectedMake,\n      filteredPrices: filteredPrices.map(price => ({\n        value: price,\n        label: `${price}`,\n      })),\n      minMileage: parseInt(minValue.replace(/,/g, ''), 10),\n      maxMileage: parseInt(maxValue.replace(/,/g, ''), 10),\n    };\n\n    onFilterChange(newFilters);\n  };\n\n  const handleResetClick = () => {\n    setSelectedMake('');\n    setSelectedPriceStep(null);\n    setSelectedPriceLabel('');\n    setMinValue('');\n    setMaxValue('');\n    onResetClick();\n  };\n\n  return (\n    <Container>\n      <SelectContainer>\n        <Label htmlFor=\"nameSelect\">Car brand</Label>\n        <Selecters\n          id=\"nameSelect\"\n          placeholder=\"Enter the text\"\n          value={selectedMake}\n          onChange={selectedOption => setSelectedMake(selectedOption)}\n          options={makeOptions}\n        />\n      </SelectContainer>\n\n      <SelectContainer>\n        <Label htmlFor=\"priceSelect\">Price/ 1 hour</Label>\n        <Selecters\n          id=\"priceSelect\"\n          placeholder=\"To $\"\n          value={\n            selectedPriceStep\n              ? { value: selectedPriceStep, label: selectedPriceLabel }\n              : null\n          }\n          onChange={handlePriceStepChange}\n          options={priceRangeOptions}\n        />\n      </SelectContainer>\n\n      <Form>\n        <Label>Car mileage / km</Label>\n        <InputContainer>\n          <InputLeft\n            type=\"text\"\n            value={formatMileage(minValue)}\n            onChange={handleMinInputChange}\n          />\n          <UnitLeft>From</UnitLeft>\n          <InputRight\n            type=\"text\"\n            value={formatMileage(maxValue)}\n            onChange={handleMaxInputChange}\n          />\n          <UnitRight>To</UnitRight>\n        </InputContainer>\n      </Form>\n      <Buttons onClick={handleFilterClick} text=\"Search\" />\n      <Buttons onClick={handleResetClick} text=\"Reset\" />\n    </Container>\n  );\n};\n\nexport default FilteredForm;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ListItems = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  grid-gap: 29px;\n  margin-top: 30px;\n  margin-bottom: 20px;\n`;\n","import styled from '@emotion/styled';\nimport { colors } from '../../utils';\nimport { FaRegHeart, FaHeart } from 'react-icons/fa';\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 274px;\n  height: 426px;\n`;\n\nexport const ImageContainer = styled.div`\n  position: relative;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 268px;\n  border-radius: 10px;\n  object-fit: cover;\n  background: linear-gradient(\n    180deg,\n    rgba(18, 20, 23, 0.5) 2.5%,\n    rgba(18, 20, 23, 0) 41.07%\n  );\n`;\n\nexport const HeartBtn = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background-color: transparent;\n`;\nexport const SvgHeartEmpty = styled(FaRegHeart)`\n  width: 18px;\n  height: 18px;\n  fill: ${colors.white};\n`;\n\nexport const SvgHeart = styled(FaHeart)`\n  width: 18px;\n  height: 18px;\n  fill: ${colors.blueActenct};\n`;\n\nexport const Title = styled.h3`\n  font-size: 16px;\n  line-height: 24px;\n  display: flex;\n`;\n\nexport const Span = styled.span`\n  color: ${colors.blueActenct};\n  margin-left: 6px;\n`;\n\nexport const SpanPrice = styled.span`\n  margin-left: auto;\n`;\n\nexport const TextAboutContainer = styled.div`\n  display: flex;\n  width: 255px;\n  height: 40px;\n  overflow: hidden;\n`;\n\nexport const TextAbout = styled.p`\n  width: 270px;\n  font-size: 12px;\n  line-height: 1.5em;\n\n  color: ${colors.gray};\n`;\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { addFavorites, removeFavorites } from 'redux/favorites/slice';\nimport {\n  Item,\n  ImageContainer,\n  Img,\n  HeartBtn,\n  SvgHeartEmpty,\n  SvgHeart,\n  Title,\n  Span,\n  SpanPrice,\n  TextAboutContainer,\n  TextAbout,\n} from './AdvertsItems.styled';\nimport Buttons from 'components/Button/Button';\nconst defaultImageURL = \"../../img/no-image.jpg\";\n\nexport const AdvertsItems = ({ advert }) => {\n  const dispatch = useDispatch();\n  const favorites = useSelector(state => state.favorites.favorites);\n\n  const [isFavorite, setIsFavorite] = useState(false);\n  const isShortMake = advert.make.length <= 9;\n\n  const {\n    make,\n    model,\n    year,\n    rentalPrice,\n    address,\n    functionalities,\n    rentalCompany,\n    type,\n    mileage,\n  } = advert;\n\n  const addressWords = address.split(' ');\n  const lastTwoWords = addressWords.slice(-2).join(' | ');\n\n  const firstFunctionality = functionalities[0];\n\n  useEffect(() => {\n    const isAlreadyFavorite = favorites.some(\n      favorite => favorite.id === advert.id\n    );\n    setIsFavorite(isAlreadyFavorite);\n  }, [favorites, advert]);\n\n  const toggleFavorite = () => {\n    if (isFavorite) {\n      dispatch(removeFavorites(advert.id));\n      toast.warning('Ad removed from favorites.');\n    } else {\n      dispatch(addFavorites(advert));\n      toast.success('Ad added to favorites.');\n    }\n    setIsFavorite(!isFavorite);\n  };\n\n \n\n  return (\n    <Item>\n      <ImageContainer>\n        <Img src={advert.img || defaultImageURL} alt={make} width={274} />\n        <HeartBtn  onClick={toggleFavorite}>\n         {isFavorite ? <SvgHeart /> : <SvgHeartEmpty />}\n         </HeartBtn>\n      </ImageContainer>\n      <Title>\n        {make}\n        {isShortMake && <Span>{model}</Span>}, {year}{' '}\n        <SpanPrice>{rentalPrice}</SpanPrice>\n      </Title>\n      <TextAboutContainer>\n        <TextAbout>\n          {lastTwoWords} | {rentalCompany} | {type} | {make} | {mileage} |{' '}\n          {firstFunctionality}\n        </TextAbout>\n      </TextAboutContainer>\n      <Buttons text=\"Learn More\" />\n    </Item>\n  );\n};\n\nexport default AdvertsItems;\n","import  { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAll } from '../../redux/adverts/operations';\nimport { getAdverts } from '../../redux/adverts/selectors';\nimport { Container, ListItems } from './AdvertsList.styled';\nimport { AdvertsItems } from '../AdvertsItems/AdvertsItems';\nimport { Loader } from '../Loader/Loader';\nimport Buttons from 'components/Button/Button';\n\nexport const AdvertsList = ({ filteredAdverts }) => {\n  const dispatch = useDispatch();\n  const adverts = useSelector(getAdverts);\n  const itemsPerPage = 8;\n  const [startIndex, setStartIndex] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const hasFilteredAdverts = filteredAdverts?.length > 0;\n  const displayedAdverts = hasFilteredAdverts\n    ? filteredAdverts\n    : adverts.slice(0, startIndex + itemsPerPage);\n\n  useEffect(() => {\n    dispatch(fetchAll());\n  }, [dispatch]);\n\n  const loadMore = () => {\n    setLoading(true);\n    setTimeout(() => {\n      setStartIndex(startIndex + itemsPerPage);\n      setLoading(false);\n    }, 1000);\n  };\n\n  const filteredAdvertsCount = hasFilteredAdverts\n    ? filteredAdverts.length\n    : adverts.length;\n  const shouldShowLoadMoreButton =\n    !loading && startIndex + itemsPerPage < filteredAdvertsCount;\n\n  return (\n    <Container>\n      <ListItems>\n        {displayedAdverts.map((advert, index) => (\n          <AdvertsItems key={advert.id} advert={advert} index={index} />\n        ))}\n      </ListItems>\n      {loading ? (\n        <Loader />\n      ) : (\n        shouldShowLoadMoreButton && (\n          <Buttons onClick={loadMore} text=\"Load more\" />\n        )\n      )}\n    </Container>\n  );\n};\n\nexport default AdvertsList;\n","import React, { useEffect, useState } from 'react';\nimport { CatalogContainer, ResultMessage } from './Catalog.styled';\nimport {FilteredForm} from 'components/FilteredForm/FilteredForm';\nimport { AdvertsList } from '../../components/AdvertsList/AdvertsList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAdverts } from 'redux/adverts/selectors';\nimport { fetchAll } from 'redux/adverts/operations';\nimport { ToastContainer } from 'react-toastify';\n\nexport const Catalog = () => {\n  const dispatch = useDispatch();\n  const allAdverts = useSelector(getAdverts);\n\n  const [filters, setFilters] = useState({\n    make: '',\n    filteredPrices: [],\n    minMileage: '',\n    maxMileage: '',\n  });\n  const [filteredAdverts, setFilteredAdverts] = useState(null);\n  const [isFiltering, setIsFiltering] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchAll());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isFiltering) {\n      if (\n        filters.make ||\n        filters.filteredPrices.length > 0 ||\n        filters.minMileage ||\n        filters.maxMileage\n      ) {\n        const filteredAdverts = allAdverts.filter(advert => {\n          if (filters.make && advert.make !== filters.make.value) {\n            return false;\n          }\n          if (\n            filters.filteredPrices.length > 0 &&\n            !filters.filteredPrices.some(\n              priceObj => priceObj.value === advert.rentalPrice.replace('$', '')\n            )\n          ) {\n            return false;\n          }\n          if (filters.minMileage && advert.mileage < filters.minMileage) {\n            return false;\n          }\n          if (filters.maxMileage && advert.mileage > filters.maxMileage) {\n            return false;\n          }\n          return true;\n        });\n\n        setFilteredAdverts(filteredAdverts);\n      } else {\n        setFilteredAdverts([]);\n      }\n    }\n  }, [filters, allAdverts, isFiltering]);\n\n  const makes = [...new Set(allAdverts.map(advert => advert.make))];\n  const prices = [\n    ...new Set(allAdverts.map(advert => advert.rentalPrice.replace('$', ''))),\n  ];\n  const mileage = [...new Set(allAdverts.map(advert => advert.mileage))];\n  const minMileage = Math.min(...mileage);\n  const maxMileage = Math.max(...mileage);\n\n  const handleResetClick = () => {\n    setFilters({\n      make: '',\n      filteredPrices: [],\n      minMileage: '',\n      maxMileage: '',\n    });\n    setIsFiltering(false);\n  };\n\n  return (\n    <>\n      <CatalogContainer>\n        <FilteredForm\n          makes={makes}\n          prices={prices}\n          minMileage={minMileage}\n          maxMileage={maxMileage}\n          onFilterChange={newFilters => {\n            setFilters(newFilters);\n            setIsFiltering(true);\n          }}\n          filters={filters}\n          onResetClick={handleResetClick}\n        />\n        {isFiltering ? (\n          filteredAdverts !== null && filteredAdverts.length > 0 ? (\n            <AdvertsList filteredAdverts={filteredAdverts} />\n          ) : (\n            <>\n              <ResultMessage>\n                No results found for the selected criteria.\n              </ResultMessage>\n            </>\n          )\n        ) : (\n          <AdvertsList adverts={allAdverts} />\n        )}\n      </CatalogContainer>\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default Catalog;\n","export const getAdverts = state => state.adverts.items;\nexport const selectedIsLoading = state => state.adverts.isLoading;\n\n"],"names":["Buttons","_ref","text","onClick","width","StylesButton","styled","Button","height","marginTop","padding","borderRadius","backgroundColor","fontFamily","transition","_jsx","variant","children","CatalogContainer","_templateObject","_taggedTemplateLiteral","ResultMessage","_templateObject2","colors","colourStyles","control","styles","_objectSpread","borderColor","border","fontSize","appearance","option","isFocused","color","menuList","base","background","placeholder","Selecters","_ref2","options","onChange","style","Select","Container","mq","SelectContainer","Label","_templateObject3","Form","_templateObject4","InputContainer","_templateObject5","InputLeft","_templateObject6","UnitLeft","_templateObject7","InputRight","_templateObject8","UnitRight","_templateObject9","FilteredForm","makes","prices","onFilterChange","onResetClick","_useState","useState","_useState2","_slicedToArray","selectedMake","setSelectedMake","_useState3","_useState4","selectedPriceStep","setSelectedPriceStep","_useState5","_useState6","selectedPriceLabel","setSelectedPriceLabel","_useState7","_useState8","minValue","setMinValue","_useState9","_useState10","maxValue","setMaxValue","makeOptions","map","make","value","label","priceRangeOptions","i","push","concat","filteredPrices","filter","price","formatMileage","toString","replace","_jsxs","htmlFor","id","selectedOption","type","e","target","parseInt","toast","newFilters","minMileage","maxMileage","ListItems","Item","ImageContainer","Img","HeartBtn","SvgHeartEmpty","FaRegHeart","SvgHeart","FaHeart","Title","Span","SpanPrice","TextAboutContainer","_templateObject10","TextAbout","_templateObject11","AdvertsItems","advert","dispatch","useDispatch","favorites","useSelector","state","isFavorite","setIsFavorite","isShortMake","length","model","year","rentalPrice","address","functionalities","rentalCompany","mileage","lastTwoWords","split","slice","join","firstFunctionality","useEffect","isAlreadyFavorite","some","favorite","src","img","alt","removeFavorites","addFavorites","AdvertsList","filteredAdverts","adverts","getAdverts","startIndex","setStartIndex","loading","setLoading","hasFilteredAdverts","displayedAdverts","fetchAll","filteredAdvertsCount","shouldShowLoadMoreButton","index","Loader","setTimeout","Catalog","allAdverts","filters","setFilters","setFilteredAdverts","isFiltering","setIsFiltering","priceObj","_toConsumableArray","Set","Math","min","apply","max","_Fragment","ToastContainer","items","selectedIsLoading","isLoading"],"sourceRoot":""}