{"version":3,"file":"static/js/223.9e8126cf.chunk.js","mappings":"iNAEaA,EAAYC,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8MAYtBC,EAAoBH,EAAAA,EAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6B,oGCZ9BG,EAAgBL,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4H,SCO1BI,EAAqB,WAChC,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,GAK9B,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGL,GACCG,EAAAA,EAAAA,KAACG,EAAAA,EAAM,KAEPC,EAAAA,EAAAA,MAACX,EAAa,CAAAS,SAAA,EACZF,EAAAA,EAAAA,KAAA,OAAKK,I,88YAAeC,IAAI,sBACxBN,EAAAA,EAAAA,KAACO,EAAAA,EAAO,CAACC,QAVU,WACzBb,EAAS,WACX,EAQ8Cc,KAAK,wBAKrD,EC6CA,EA/DkB,WAChB,IAAMC,GAAYZ,EAAAA,EAAAA,KAAY,SAAAa,GAAK,OAAIA,EAAMD,UAAUA,SAAS,IAShEE,GAMIC,EAAAA,EAAAA,IAAUH,EAbS,CACrBI,KAAM,GACNC,eAAgB,GAChBC,WAAY,GACZC,WAAY,KAIZC,EAAON,EAAPM,QACAC,EAAeP,EAAfO,gBACAC,EAAWR,EAAXQ,YACAC,EAAkBT,EAAlBS,mBACAC,EAAgBV,EAAhBU,iBAGIC,GAAKC,EAAAA,EAAAA,GAAO,IAAIC,IAAIf,EAAUgB,KAAI,SAAAC,GAAM,OAAIA,EAAOb,IAAI,MACvDc,GAAMJ,EAAAA,EAAAA,GACP,IAAIC,IAAIf,EAAUgB,KAAI,SAAAC,GAAM,OAAIA,EAAOE,YAAYC,QAAQ,IAAK,GAAG,MAElEC,GAAOP,EAAAA,EAAAA,GAAO,IAAIC,IAAIf,EAAUgB,KAAI,SAAAC,GAAM,OAAIA,EAAOI,OAAO,MAC5Df,EAAagB,KAAKC,IAAGC,MAARF,MAAIR,EAAAA,EAAAA,GAAQO,IACzBd,EAAae,KAAKG,IAAGD,MAARF,MAAIR,EAAAA,EAAAA,GAAQO,IAE/B,OACE3B,EAAAA,EAAAA,MAACjB,EAAS,CAAAe,SAAA,EACRF,EAAAA,EAAAA,KAACT,EAAiB,CAAAW,UAChBF,EAAAA,EAAAA,KAACoC,EAAAA,EAAY,CACXb,MAAOA,EACPK,OAAQA,EACRZ,WAAYA,EACZC,WAAYA,EACZoB,eAAgBhB,EAChBH,QAASA,EACToB,aAAchB,MAGI,IAArBZ,EAAU6B,QACTvC,EAAAA,EAAAA,KAACN,EAAkB,KAEnBM,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGkB,EACCD,GAAmBA,EAAgBoB,OAAS,GAC1CvC,EAAAA,EAAAA,KAACwC,EAAAA,EAAW,CAACrB,gBAAiBA,KAE9BnB,EAAAA,EAAAA,KAACN,EAAkB,IAGrBgB,EAAUgB,KAAI,SAACC,EAAQc,GAAK,OAC1BzC,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAC0C,EAAAA,EAAY,CAACf,OAAQA,EAAQc,MAAOA,KAD7Bd,EAAOgB,GAEX,OAKd3C,EAAAA,EAAAA,KAAC4C,EAAAA,GAAc,MAGrB,C","sources":["pages/Favorite/Favorite.styled.js","components/NoResultsFavorites/NoResultsFavorites.styled.js","components/NoResultsFavorites/NoResultsFavorites.jsx","pages/Favorite/Favorite.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  min-height: 65vh;\n  grid-gap: 50px;\n  padding-bottom: 20px;\n  max-width: 1184px;\n  margin: 0 auto;\n  margin-bottom: 50px;\n`;\n\nexport const FilteredContainer = styled.div`\n  margin: 0 auto;\n`;\n","import styled from '@emotion/styled';\n\nexport const FotoContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin-top: 15px;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport ImgNoRes from '../../img/no-results-found.jpg';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { selectedIsLoading } from 'redux/adverts/selectors';\nimport Loader from 'components/Loader/Loader';\nimport Buttons from 'components/Button/Button';\nimport {FotoContainer} from './NoResultsFavorites.styled'\n\nexport const NoResultsFavorites = () => {\n  const navigate = useNavigate();\n  const isLoading = useSelector(selectedIsLoading);\n\n  const handleExploreClick = () => {\n    navigate('/catalog');\n  };\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <FotoContainer>\n          <img src={ImgNoRes} alt=\"No results Found\" />\n          <Buttons onClick={handleExploreClick} text=\"See all catalog\" />\n        </FotoContainer>\n      )}\n    </>\n  );\n};\n\nexport default NoResultsFavorites;\n","import React from 'react';\nimport { Container, FilteredContainer } from './Favorite.styled';\nimport { useSelector } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport { useFilter } from '../../utils';\nimport { FilteredForm } from 'components/FilteredForm/FilteredForm';\nimport { AdvertsList } from 'components/AdvertsList/AdvertsList';\nimport { AdvertsItems } from 'components/AdvertsItems/AdvertsItems';\nimport { NoResultsFavorites } from 'components/NoResultsFavorites/NoResultsFavorites';\n\nconst Favorites = () => {\n  const favorites = useSelector(state => state.favorites.favorites);\n\n  const initialFilters = {\n    make: '',\n    filteredPrices: [],\n    minMileage: '',\n    maxMileage: '',\n  };\n\n  const {\n    filters,\n    filteredAdverts,\n    isFiltering,\n    handleFilterChange,\n    handleResetClick,\n  } = useFilter(favorites, initialFilters);\n\n  const makes = [...new Set(favorites.map(advert => advert.make))];\n  const prices = [\n    ...new Set(favorites.map(advert => advert.rentalPrice.replace('$', ''))),\n  ];\n  const mileage = [...new Set(favorites.map(advert => advert.mileage))];\n  const minMileage = Math.min(...mileage);\n  const maxMileage = Math.max(...mileage);\n\n  return (\n    <Container>\n      <FilteredContainer>\n        <FilteredForm\n          makes={makes}\n          prices={prices}\n          minMileage={minMileage}\n          maxMileage={maxMileage}\n          onFilterChange={handleFilterChange}\n          filters={filters}\n          onResetClick={handleResetClick}\n        />\n      </FilteredContainer>\n      {favorites.length === 0 ? (\n        <NoResultsFavorites />\n      ) : (\n        <>\n          {isFiltering ? (\n            filteredAdverts && filteredAdverts.length > 0 ? (\n              <AdvertsList filteredAdverts={filteredAdverts} />\n            ) : (\n              <NoResultsFavorites />\n            )\n          ) : (\n            favorites.map((advert, index) => (\n              <div key={advert.id}>\n                <AdvertsItems advert={advert} index={index} />\n              </div>\n            ))\n          )}\n        </>\n      )}\n      <ToastContainer />\n    </Container>\n  );\n};\n\nexport default Favorites;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","FilteredContainer","_templateObject2","FotoContainer","NoResultsFavorites","navigate","useNavigate","isLoading","useSelector","selectedIsLoading","_jsx","_Fragment","children","Loader","_jsxs","src","alt","Buttons","onClick","text","favorites","state","_useFilter","useFilter","make","filteredPrices","minMileage","maxMileage","filters","filteredAdverts","isFiltering","handleFilterChange","handleResetClick","makes","_toConsumableArray","Set","map","advert","prices","rentalPrice","replace","mileage","Math","min","apply","max","FilteredForm","onFilterChange","onResetClick","length","AdvertsList","index","AdvertsItems","id","ToastContainer"],"sourceRoot":""}